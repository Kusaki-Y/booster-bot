name: build-booster-bot

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number'
        required: true
        default: '1.3.x'
      label:
        type: choice
        description: 'Label'
        options:
        - build
        - preview
        - release
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [ Release ]

    runs-on: windows-latest

    env:
      Solution_Path: src/BoosterBot.sln
      Project_Path: src/BoosterBot/BoosterBot.csproj
      Version_Number: ${{ github.event.inputs.version || '1.3.99999' }}
      Version: ''
    steps:
    - name: Checkout
      uses: actions/checkout@v3
        
    - name: Restore
      run: dotnet restore ${{ env.Solution_Path }}
      
    - name: Set label
      id: set_label
      run: |
        $version = "${{ env.Version_Number }}"
        $build = '${{ github.run_number }}'
        $label = '${{ github.event.inputs.label }}'
        
        if ($label -ne 'release') {
          "Version=$version-$label" >> $env:GITHUB_ENV
        }
        else {
          "Version=$version" >> $env:GITHUB_ENV
        }
      shell: pwsh
    
    - name: Update version
      run: |
        $label = '${{ github.event.inputs.label }}'
        if (-not $label.StartsWith("-")) {
            $label = "-" + $label
        }

        if ($label -eq "-release") {
            $label = ""
        }
        
        $csprojPath = "${{ env.Project_Path }}"
        $csprojContent = Get-Content $csprojPath -Raw
        $newVersion = "${{ env.Version_Number }}$label"
        $fileVersion = "${{ env.Version_Number }}.${{ github.run_number }}"
        Write-Output "Version number: $newVersion"
        $updatedContent = $csprojContent -replace '(<Version>).*(</Version>)', "`${1}$newVersion`$2"
        $updatedContent = $updatedContent -replace '(<FileVersion>).*(</FileVersion>)', "`${1}$fileVersion`$2"
        $updatedContent = $updatedContent -replace '(<AssemblyVersion>).*(</AssemblyVersion>)', "`${1}$fileVersion`$2"
        Set-Content -Path $csprojPath -Value $updatedContent
      shell: pwsh
        
    - name: Build
      run: dotnet build ${{ env.Solution_Path }} --configuration Release

    - name: Publish
      run: dotnet publish ${{ env.Project_Path }} -o './artifacts/booster-bot-v${{ env.Version }}' --configuration Release -r win-x64 --self-contained true
      
    - name: Purge artifacts
      uses: kolpav/purge-artifacts-action@v1
      with:
        token: ${{ secrets.API_REPOSITORY_PAT }}
        expire-in: 0
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: 'booster-bot-v${{ env.Version }}'
        path: ./artifacts
